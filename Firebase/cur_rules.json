{
  "rules": {
    "users": {
      "$uid": {
        ".validate": "newData.hasChildren(['uid', 'name', 'email'])",
        "uid": {
          ".validate": "newData.isString()"
        },
        "name": {
          ".validate": "newData.isString()"
        },
        "email": {
          ".validate": "newData.isString()"
        },
        "permissions": {
          "$key1": {
            ".validate": "(($key1 == 'admin' || $key1 == 'client') && newData.isBoolean())"
          },
          ".validate": "newData.hasChildren()"
        },
        "services": {
          "$key2": {
            ".validate": "(((($key2 == 'notifications' || $key2 == 'newsletter') || $key2 == 'analysis') || $key2 == 'full_enrol') && newData.isBoolean())"
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "($uid == auth.uid || ((auth != NULL && auth.uid == auth.uid) && root.child('users').child(auth.uid).child('permissions').child('admin').val() == true))",
        ".write": "($uid == auth.uid || ((auth != NULL && auth.uid == auth.uid) && newData.parent().parent().child('users').child(auth.uid).child('permissions').child('admin').val() == true))"
      }
    },
    "notifications": {
      ".validate": "newData.hasChildren(['author', 'message', 'price', 'symbol', 'timestamp'])",
      "author": {
        ".validate": "newData.isString()"
      },
      "message": {
        ".validate": "newData.isString()"
      },
      "price": {
        ".validate": "newData.isString()"
      },
      "symbol": {
        ".validate": "newData.isString()"
      },
      "timestamp": {
        ".validate": "(newData.isNumber() && newData.val() == now)"
      },
      "$other": {
        ".validate": "false"
      },
      ".read": "(((auth != NULL && auth.uid == auth.uid) && root.child('users').child(auth.uid).child('services').child('notifications').val() == true) || ((auth != NULL && auth.uid == auth.uid) && root.child('users').child(auth.uid).child('permissions').child('admin').val() == true))",
      ".write": "((auth != NULL && auth.uid == auth.uid) && newData.parent().child('users').child(auth.uid).child('permissions').child('admin').val() == true)"
    }
  }
}
